from typing import Literal

PermissionType = Literal["ALLOW", "DENY"]
FilterType = Literal["FILTER", "VALUE"]

# https://docs.github.com/en/webhooks/webhook-events-and-payloads
DEFAULT_EVENT_FORMATS: dict[str, str] = {
    "branch_protection_configuration": "",
    "branch_protection_rule": "",
    "check_run": "",
    "check_suite": "",
    "code_scanning_alert": "",
    "commit_comment": "{comment[user][login]} commented on {comment[commit_id]} in {repository[full_name]}",
    "create": "{sender[login]} created {ref_type} ({ref}) in {repository[full_name]}",
    "custom_property": "",
    "custom_property_values": "",
    "delete": "{sender[login]} deleted {ref_type} ({ref}) in {repository[full_name]}",
    "dependabot_alert": "",
    "deploy_key": "",
    "deployment": "{sender[login]} deployed {deployment[ref]} to {deployment[environment]} in {repository[full_name]}",
    "deployment_protection_rule": "",
    "deployment_review": "",
    "deployment_status": "deployment of {deployement[ref]} to {deployment[environment]} {deployment_status[state]} in {repository[full_name]}",  # noqa: E501
    "discussion": "",
    "discussion_comment": "",
    "fork": "{forkee[owner][login]} forked {forkee[name]}",
    "github_app_authorization": "",
    "gollum": "{sender[login]} edited wiki pages in {repository[full_name]}",
    "installation": "",
    "installation_repositories": "",
    "installation_target": "",
    "issue_comment": "{sender[login]} commented on issue #{issue[number]} in {repository[full_name]}",
    "issues": "{sender[login]} {action} issue #{issue[number]} in {repository[full_name]}",
    "label": "",
    "marketplace_purchase": "",
    "member": "{sender[login]} {action} member {member[login]} in {repository[full_name]}",
    "membership": "{sender[login]} {action} member {member[login]} to team {team[name]} in {repository[full_name]}",
    "merge_group": "",
    "meta": "",
    "milestone": "",
    "org_block": "",
    "organization": "",
    "package": "",
    "page_build": "{sender[login]} built pages in {repository[full_name]}",
    "personal_access_token_request": "",
    "ping": "ping from {sender[login]}",
    "project_card": "{sender[login]} {action} project card {project_card[note]}",
    "project": "{sender[login]} {action} project {project[name]}",
    "project_column": "{sender[login]} {action} project column {project_column[name]}",
    "projects_v2": "{sender[login]} {action} project_v2 {projects_v2[title]}",
    "projects_v2_item": "{sender[login]} {action} project item {projects_v2_item[content_type]} for {projects_v2_item[content_node_id]}",  # noqa: E501
    "projects_v2_status_update": "{sender[login]} {action} project status update",
    "public": "{sender[login]} publicized {repository[full_name]}",
    "pull_request": "{sender[login]} {action} pull #{pull_request[number]} in {repository[full_name]}",
    "pull_request_review_comment": "{comment[user][login]} {action} comment on pull #{pull_request[number]} in {repository[full_name]}",  # noqa: E501
    "pull_request_review": "{sender[login]} {action} {review[state]} review on pull #{pull_request[number]} in {repository[full_name]}",  # noqa: E501
    "pull_request_review_thread": "",
    "push": "{pusher[name]} pushed {ref} in {repository[full_name]}",
    "registry_package": "",
    "release": "{release[author][login]} {action} {release[tag_name]} in {repository[full_name]}",
    "repository_advisory": "",
    "repository": "{sender[login]} {action} repository {repository[full_name]}",
    "repository_dispatch": "",
    "repository_import": "",
    "repository_ruleset": "",
    "repository_vulnerability_alert": "",
    "secret_scanning_alert": "",
    "secret_scanning_alert_location": "",
    "security_advisory": "",
    "security_and_analysis": "",
    "sponsorship": "{sender[login]} {action} sponsorship in {repository[full_name]}",
    "star": "{sender[login]} {action} star in {repository[full_name]}",
    "status": "{sender[login]} set {sha} status to {state} in {repository[full_name]}",
    "sub_issues": "{sender[login]} {action} sub-issue #{issue[number]} in {repository[full_name]}",
    "team_add": "{sender[login]} added repository {repository[full_name]} to team {team[name]}",
    "team": "{sender[login]} {action} team {team[name]} in {repository[full_name]}",
    "watch": "{sender[login]} {action} watch in repository {repository[full_name]}",
    "workflow_dispatch": "{sender[login]} dispatched workflow {workflow[name]} in {repository[full_name]}",
    "workflow_job": "{sender[login]} {action} in workflow_job {workflow_job[name]} with {workflow_job[conclusion]} in {repository[full_name]}",  # noqa: E501
    "workflow_run": "{sender[login]} {action} workflow_run {workflow[name]} in {repository[full_name]}",
}
